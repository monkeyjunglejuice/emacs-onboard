* üöÄ ONBOARD --- Emacs Onboarding Made Easy

/Portable Emacs starter kit without any 3rd-party packages/

[[file:misc/emacs-onboard.jpg]]

Overwhelmed by the complexity of Emacs distros like Doom-Emacs or Spacemacs? You want to roll your own Emacs config bottom-up, but not overlook those easy-to-miss basics? Or ... I hardly dare to say it ... you don't want to configure Emacs at all? But ... /just use it/??? ü§Ø

The ONBOARD Emacs starter is your clean slate to build upon. It's almost vanilla Emacs, but gives you convenience and a better user experience, without relying on additional 3rd-party packages.
*It's all built-in -- all onboard!**

‚úî One single file

‚úî Only built-in packages

‚úî Beginner-friendly drop-in config

** Why, oh why? Yet another Emacs starter kit?

Legit question. Well, when I was setting up a VM to test some things, I wished I had a one-file-config that I can simply drop in and have a sane Emacs environment in no time.

And later then, when I was cleaning up my Emacs config, I realized that I haven't touched some parts within the last months or so. They just worked incredibly well.

So I stripped out those parts and put it all in one file, and made them my core config. Then added some grooming to make everything digestable for the public, and -- here we are.

Actually I use not only that config file, but have my Emacs config split into several libraries -- e. g. an extension layer where 3rd-party packages are configured, configs for programming languages, etc ‚Ä¶

‚Ä¶ but this is the üíù piece.

** TRY IT

1. Download [[https://raw.githubusercontent.com/monkeyjunglejuice/emacs.onboard/main/onboard.el][onboard.el]]
2. Open a terminal
3. Run the shell command: ~emacs -q --load ~/path/to/onboard.el~

** INSTALL

*1.* Clone this repository:
#+begin_src shell
git clone https://github.com/monkeyjunglejuice/emacs.onboard.git ~/.emacs.onboard
#+end_src

*2.* Put this in your Emacs init file:
#+begin_src emacs-lisp
  (load-file (expand-file-name "~/.emacs.onboard/onboard.el"))
#+end_src

*3.* (Re)start Emacs

/You don't have a init file or don't know where it is? With a freshly installed Emacs there is no init file. But you can ask Emacs where it expects to find the init file:/

"M-x describe-variable" <RET> user-init-file

Typical results:

- on Linux / Unix / MacOS
  - =/home/USERNAME/.emacs=
  - =/home/USERNAME/.emacs.d/init.el=
- on Windows
  - =c:/Users/USERNAME/AppData/Roaming/.emacs=
  - =c:/Users/USERNAME/AppData/Roaming/.emacs.d/init.el=

** Getting comfortable

The seemingly weird keybindings are not what make Emacs. They are in fact secondary. All these keybindings are just convenience shortcuts to use /commands/, but they are not the commands themselves. The commands are the really interesting things. What that means:

*** Emacs has only 2 really important keybindings:

"M-x" ‚Äî Press <Alt>+<x> to show all commands

"C-g" ‚Äî Get out! Press <Ctrl>+<g> to cancel whatever happens (or hit 3x <ESC> in utter panic ‚Äì same effect!)

**** Examples:

- "M-x list-packages" Install 3rd-party packages (the "Emacs app store" or "Emacs marketplace" /cough-cough capitalism cough-cough/)
- "M-x check-parens" Check if all parens match (within Emacs Lisp code)
- "M-x help" to reach the ultimate help menu

** Supported Emacs versions (tested with):

- [X] Emacs 29.2 from Homebrew on MacOS Sonoma 14.2.1
- [X] Emacs 28.1 on Debian Stable
- [X] Emacs 28.1 from Guix

*Backwards-compatibility* follwos the Emacs version (28.1) in Debian Stable.
Emacs 26 and Emacs 27 are no longer supported since 27.01.2024.

** Goals

- Portable: Should work on recent Linux/Unix, Windows and MacOS systems, while maintaining reasonable backwards-compatibility.
- Beginner-friendly: Novice Emacs users willing to touch Elisp code should be able to follow. Elisp code should be free from errors and warnings.
- Use only built-in packages and features enabled by the GNU Emacs distribution's default build options.
- Extendable by 3rd-party packages without interfering or breaking things.
  Coming soon: Emacs ONTOP extension layer to Emacs ONBOARD)
- Don't be invasive: Provide an Emacs config as a library; don't try to be a replacement, rather an add-on.
- Documentation is first class; it should be clear why something is in the code.
- Modular simplicity: Code should not be intertwined, but easily modificable and separately usable.

** Non-Goals

- Providing a whole new experience like Spacemacs or Doom-Emacs.
- New keybindings. However, they may be useful in certain circumstances.
- Pre-configure everything and the cat's pillow (if you know cats ‚Ä¶).
- (Re)creating functionality where a 3rd-party package would be a better fit.

** Contribute

You are welcome! Here's the agenda what's currently important/worked on:

*** Catching up with Emacs 29 features
- Configuration based on Use-package in Emacs ONBOARD is postponed until Emacs 29 is in the Depian Stable repos; however ist will be [[https://github.com/monkeyjunglejuice/emacs.ontop][available in the Emacs ONTOP extension layer]] (coming soon).
- It's the same for Eglot. Common tasks are [[id:][preconfigured in Emacs ONTOP]] (coming soon).
*** Testing the config on various Emacsen and operating systems
- Flickering and delayed drawing happened under MacOS Sonoma 14.2.1, maybe due to tweaks for smooth scrolling, e.g. =(setq scroll-step 1=) or similar. Seems fixed.
*** Ensure portability between various host OS. All features should work in Linux, Windows and Mac equally well.
- Please report strange behaviors. I've switched to MacOS after 2+ decades pure Linux -- so I can do only some minor cross testing myself.
